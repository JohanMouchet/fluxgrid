/* Settings */
/* Tests */
.fluxgrid-debug {
  /* stylelint-disable color-no-hex */
  /* stylelint-disable enable */
  /* Cell */
  /* Grid */
}

.fluxgrid-debug .container,
.fluxgrid-debug .grid,
.fluxgrid-debug .cell {
  position: relative;
}

.fluxgrid-debug .container::after,
.fluxgrid-debug .grid::after,
.fluxgrid-debug .cell::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  outline: 1px dashed;
  pointer-events: none;
  outline-offset: -1px;
}

.fluxgrid-debug .container::after {
  outline-color: #4f91b2;
  left: 0;
  right: 0;
}

.fluxgrid-debug .cell::after {
  outline-style: dotted;
  outline-color: #999;
}

.fluxgrid-debug .grid::after {
  outline-color: #9b4dca;
}

.fluxgrid-debug .grid::after {
  left: 6px;
  right: 6px;
}

.fluxgrid-debug .cell::after {
  left: 6px;
  right: 6px;
}

@media (min-width: 768px) {
  .fluxgrid-debug .grid::after {
    left: 6px;
    right: 6px;
  }
  .fluxgrid-debug .cell::after {
    left: 6px;
    right: 6px;
  }
}

@media (min-width: 960px) {
  .fluxgrid-debug .grid::after {
    left: 10px;
    right: 10px;
  }
  .fluxgrid-debug .cell::after {
    left: 10px;
    right: 10px;
  }
}

@media (min-width: 1290px) {
  .fluxgrid-debug .grid::after {
    left: 15px;
    right: 15px;
  }
  .fluxgrid-debug .cell::after {
    left: 15px;
    right: 15px;
  }
}

@media (min-width: 1590px) {
  .fluxgrid-debug .grid::after {
    left: 15px;
    right: 15px;
  }
  .fluxgrid-debug .cell::after {
    left: 15px;
    right: 15px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZsZXhncmlkL19zZXR0aW5ncy5zY3NzIiwiZmxleGdyaWQvZmxleGdyaWQtZGVidWcuc2NzcyIsImZsZXhncmlkL2ZsZXhncmlkLWRlYnVnLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFBO0FBb0NBLFVBQUE7QUNsQ0E7RUFDRSxtQ0FBQTtFQUlBLDZCQUFBO0VBMEJBLFNBQUE7RUFtQkEsU0FBQTtBQzdDRjs7QURMQTs7O0VBVUksa0JBQWtCO0FDQ3RCOztBRFhBOzs7RUFhTSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixTQUFTO0VBQ1QsbUJBQW1CO0VBQ25CLG9CQUFvQjtFQUNwQixvQkFBb0I7QUNJMUI7O0FEdkJBO0VBeUJNLHNCQXZCMkI7RUF3QjNCLE9BQU87RUFDUCxRQUFRO0FDRWQ7O0FEN0JBO0VBa0NNLHFCQUFxQjtFQUNyQixtQkEvQm1CO0FDOEJ6Qjs7QURsQ0E7RUFxRE0sc0JBbERzQjtBQ21DNUI7O0FEdENBO0VBOERRLFNBSndDO0VBS3hDLFVBTHdDO0FDZmhEOztBRDNDQTtFQTRDUSxTQUp3QztFQUt4QyxVQUx3QztBQ1FoRDs7QUQ2Qk07RUE3RU47SUE4RFEsU0FKd0M7SUFLeEMsVUFMd0M7RUNKOUM7RUR0REY7SUE0Q1EsU0FKd0M7SUFLeEMsVUFMd0M7RUNrQjlDO0FBQ0Y7O0FEa0JNO0VBN0VOO0lBOERRLFVBSndDO0lBS3hDLFdBTHdDO0VDTzlDO0VEakVGO0lBNENRLFVBSndDO0lBS3hDLFdBTHdDO0VDNkI5QztBQUNGOztBRE9NO0VBN0VOO0lBOERRLFVBSndDO0lBS3hDLFdBTHdDO0VDa0I5QztFRDVFRjtJQTRDUSxVQUp3QztJQUt4QyxXQUx3QztFQ3dDOUM7QUFDRjs7QURKTTtFQTdFTjtJQThEUSxVQUp3QztJQUt4QyxXQUx3QztFQzZCOUM7RUR2RkY7SUE0Q1EsVUFKd0M7SUFLeEMsV0FMd0M7RUNtRDlDO0FBQ0YiLCJmaWxlIjoiZmxleGdyaWRcXGZsZXhncmlkLWRlYnVnLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTZXR0aW5ncyAqL1xuXG4kZmxleGdyaWQtZGl2aXNpb246IDEyICFkZWZhdWx0O1xuXG4kZmxleGdyaWQtYnJlYWtwb2ludHM6IChcbiAgeHM6IChcbiAgICBkaXZpc2lvbjogNixcbiAgICBndXR0ZXI6IDEycHgsXG4gICAgb3V0c2lkZS1tYXJnaW46IDEycHhcbiAgKSxcbiAgc206IChcbiAgICBzaXplOiA3NjhweCxcbiAgICBkaXZpc2lvbjogJGZsZXhncmlkLWRpdmlzaW9uLFxuICAgIGd1dHRlcjogMTJweCxcbiAgICBvdXRzaWRlLW1hcmdpbjogMjRweFxuICApLFxuICBtZDogKFxuICAgIHNpemU6IDk2MHB4LFxuICAgIGRpdmlzaW9uOiAkZmxleGdyaWQtZGl2aXNpb24sXG4gICAgZ3V0dGVyOiAyMHB4LFxuICAgIG91dHNpZGUtbWFyZ2luOiA0MHB4XG4gICksXG4gIGxnOiAoXG4gICAgc2l6ZTogMTI5MHB4LFxuICAgIGRpdmlzaW9uOiAkZmxleGdyaWQtZGl2aXNpb24sXG4gICAgZ3V0dGVyOiAzMHB4LFxuICAgIG91dHNpZGUtbWFyZ2luOiA2MHB4XG4gICksXG4gIHhsOiAoXG4gICAgc2l6ZTogMTU5MHB4LFxuICAgIGRpdmlzaW9uOiAkZmxleGdyaWQtZGl2aXNpb24sXG4gICAgZ3V0dGVyOiAzMHB4LFxuICAgIG91dHNpZGUtbWFyZ2luOiA5MHB4XG4gIClcbikgIWRlZmF1bHQ7XG5cbi8qIFRlc3RzICovXG5AZWFjaCAkYnJlYWtwb2ludCwgJHNldHRpbmdzIGluICRmbGV4Z3JpZC1icmVha3BvaW50cyB7XG4gIEBpZiAobWFwLWdldCgkc2V0dGluZ3MsIG91dHNpZGUtbWFyZ2luKSA8IChtYXAtZ2V0KCRzZXR0aW5ncywgZ3V0dGVyKSAvIDIpKSB7XG4gICAgQGVycm9yIFwiVG8gYXZvaWQgb3ZlcmZsb3csIHRoZSAnb3V0c2lkZS1tYXJnaW4nICgje21hcC1nZXQoJHNldHRpbmdzLCBvdXRzaWRlLW1hcmdpbil9KSBvZiAnI3skYnJlYWtwb2ludH0nIGhhcyB0byBiZSBhcyBsYXJnZSBvciBsYXJnZXIgdGhhbiBoYWxmIHRoZSAnZ3V0dGVyJyAoI3ttYXAtZ2V0KCRzZXR0aW5ncywgZ3V0dGVyKX0pLiBUaGlzIGlzIGZvciB0aGUgLmNvbnRhaW5lciB0byBjYW5jZWwgdGhlIC5ncmlkIG5lZ2F0aXZlIG1hcmdpbnMgdXNlZCB0byBhbGlnbiB0aGUgLmNlbGxzLlwiO1xuICB9XG5cbiAgQGlmICRmbGV4Z3JpZC1kaXZpc2lvbiAlIG1hcC1nZXQoJHNldHRpbmdzLCBkaXZpc2lvbikgIT0gMCB7XG4gICAgQGVycm9yIFwiVG8gYXZvaWQgYSBjbGFzcyBuYW1lIGNvbnRhaW5pbmcgYSBkZWNpbWFsIHBvaW50LCB0aGUgZGl2aXNpb24gb2YgJGZsZXhncmlkLWRpdmlzaW9uICgjeyRmbGV4Z3JpZC1kaXZpc2lvbn0pIGJ5ICdkaXZpc2lvbicgKCN7bWFwLWdldCgkc2V0dGluZ3MsIGRpdmlzaW9uKX0pIG9mICcjeyRicmVha3BvaW50fScgaGFzIHRvIGJlIGFuIGludGVnZXIuXCI7XG4gIH1cbn1cbiIsIkBpbXBvcnQgXCJzZXR0aW5nc1wiO1xuXG4uZmxleGdyaWQtZGVidWcge1xuICAvKiBzdHlsZWxpbnQtZGlzYWJsZSBjb2xvci1uby1oZXggKi9cbiAgJGRlYnVnLWNvbnRhaW5lci1jb2xvcjogIzRmOTFiMjtcbiAgJGRlYnVnLWdyaWQtY29sb3I6ICM5YjRkY2E7XG4gICRkZWJ1Zy1jZWxsLWNvbG9yOiAjOTk5O1xuICAvKiBzdHlsZWxpbnQtZGlzYWJsZSBlbmFibGUgKi9cblxuICAuY29udGFpbmVyLFxuICAuZ3JpZCxcbiAgLmNlbGwge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgICY6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBib3R0b206IDA7XG4gICAgICBvdXRsaW5lOiAxcHggZGFzaGVkO1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICBvdXRsaW5lLW9mZnNldDogLTFweDtcbiAgICB9XG4gIH1cblxuICAuY29udGFpbmVyIHtcbiAgICAmOjphZnRlciB7XG4gICAgICBvdXRsaW5lLWNvbG9yOiAkZGVidWctY29udGFpbmVyLWNvbG9yO1xuICAgICAgbGVmdDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgIH1cbiAgfVxuXG4gIC8qIENlbGwgKi9cbiAgLmNlbGwge1xuICAgICY6OmFmdGVyIHtcbiAgICAgIG91dGxpbmUtc3R5bGU6IGRvdHRlZDtcbiAgICAgIG91dGxpbmUtY29sb3I6ICRkZWJ1Zy1jZWxsLWNvbG9yO1xuICAgIH1cbiAgfVxuXG4gIEBtaXhpbiBkZWJ1Zy1yZXNwb25zaXZlLWNlbGwoJGJyZWFrcG9pbnQsICRzZXR0aW5ncykge1xuICAgICRoYWxmLWd1dHRlcjogbWFwLWdldCgkc2V0dGluZ3MsIGd1dHRlcikgLyAyO1xuXG4gICAgLmNlbGwge1xuICAgICAgJjo6YWZ0ZXIge1xuICAgICAgICBsZWZ0OiAkaGFsZi1ndXR0ZXI7XG4gICAgICAgIHJpZ2h0OiAkaGFsZi1ndXR0ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyogR3JpZCAqL1xuICAuZ3JpZCB7XG4gICAgJjo6YWZ0ZXIge1xuICAgICAgb3V0bGluZS1jb2xvcjogJGRlYnVnLWdyaWQtY29sb3I7XG4gICAgfVxuICB9XG5cbiAgQG1peGluIGRlYnVnLXJlc3BvbnNpdmUtZ3JpZCgkYnJlYWtwb2ludCwgJHNldHRpbmdzKSB7XG4gICAgJGhhbGYtZ3V0dGVyOiBtYXAtZ2V0KCRzZXR0aW5ncywgZ3V0dGVyKSAvIDI7XG5cbiAgICAuZ3JpZCB7XG4gICAgICAmOjphZnRlciB7XG4gICAgICAgIGxlZnQ6ICRoYWxmLWd1dHRlcjtcbiAgICAgICAgcmlnaHQ6ICRoYWxmLWd1dHRlcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBAbWl4aW4gZGVidWctcmVzcG9uc2l2ZXMoJGJyZWFrcG9pbnQsICRzZXR0aW5ncykge1xuICAgIEBpbmNsdWRlIGRlYnVnLXJlc3BvbnNpdmUtZ3JpZCgkYnJlYWtwb2ludCwgJHNldHRpbmdzKTtcbiAgICBAaW5jbHVkZSBkZWJ1Zy1yZXNwb25zaXZlLWNlbGwoJGJyZWFrcG9pbnQsICRzZXR0aW5ncyk7XG4gIH1cblxuICBAZWFjaCAkYnJlYWtwb2ludCwgJHNldHRpbmdzIGluICRmbGV4Z3JpZC1icmVha3BvaW50cyB7XG4gICAgQGlmIG5vdCBtYXAtaGFzLWtleSgkc2V0dGluZ3MsIHNpemUpIHtcbiAgICAgIEBpbmNsdWRlIGRlYnVnLXJlc3BvbnNpdmVzKCRicmVha3BvaW50LCAkc2V0dGluZ3MpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IG1hcC1nZXQoJHNldHRpbmdzLCBzaXplKSkge1xuICAgICAgICBAaW5jbHVkZSBkZWJ1Zy1yZXNwb25zaXZlcygkYnJlYWtwb2ludCwgJHNldHRpbmdzKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8qIFNldHRpbmdzICovXG4vKiBUZXN0cyAqL1xuLmZsZXhncmlkLWRlYnVnIHtcbiAgLyogc3R5bGVsaW50LWRpc2FibGUgY29sb3Itbm8taGV4ICovXG4gIC8qIHN0eWxlbGludC1kaXNhYmxlIGVuYWJsZSAqL1xuICAvKiBDZWxsICovXG4gIC8qIEdyaWQgKi9cbn1cblxuLmZsZXhncmlkLWRlYnVnIC5jb250YWluZXIsXG4uZmxleGdyaWQtZGVidWcgLmdyaWQsXG4uZmxleGdyaWQtZGVidWcgLmNlbGwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5mbGV4Z3JpZC1kZWJ1ZyAuY29udGFpbmVyOjphZnRlcixcbi5mbGV4Z3JpZC1kZWJ1ZyAuZ3JpZDo6YWZ0ZXIsXG4uZmxleGdyaWQtZGVidWcgLmNlbGw6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgb3V0bGluZTogMXB4IGRhc2hlZDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIG91dGxpbmUtb2Zmc2V0OiAtMXB4O1xufVxuXG4uZmxleGdyaWQtZGVidWcgLmNvbnRhaW5lcjo6YWZ0ZXIge1xuICBvdXRsaW5lLWNvbG9yOiAjNGY5MWIyO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbn1cblxuLmZsZXhncmlkLWRlYnVnIC5jZWxsOjphZnRlciB7XG4gIG91dGxpbmUtc3R5bGU6IGRvdHRlZDtcbiAgb3V0bGluZS1jb2xvcjogIzk5OTtcbn1cblxuLmZsZXhncmlkLWRlYnVnIC5ncmlkOjphZnRlciB7XG4gIG91dGxpbmUtY29sb3I6ICM5YjRkY2E7XG59XG5cbi5mbGV4Z3JpZC1kZWJ1ZyAuZ3JpZDo6YWZ0ZXIge1xuICBsZWZ0OiA2cHg7XG4gIHJpZ2h0OiA2cHg7XG59XG5cbi5mbGV4Z3JpZC1kZWJ1ZyAuY2VsbDo6YWZ0ZXIge1xuICBsZWZ0OiA2cHg7XG4gIHJpZ2h0OiA2cHg7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuZmxleGdyaWQtZGVidWcgLmdyaWQ6OmFmdGVyIHtcbiAgICBsZWZ0OiA2cHg7XG4gICAgcmlnaHQ6IDZweDtcbiAgfVxuICAuZmxleGdyaWQtZGVidWcgLmNlbGw6OmFmdGVyIHtcbiAgICBsZWZ0OiA2cHg7XG4gICAgcmlnaHQ6IDZweDtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTYwcHgpIHtcbiAgLmZsZXhncmlkLWRlYnVnIC5ncmlkOjphZnRlciB7XG4gICAgbGVmdDogMTBweDtcbiAgICByaWdodDogMTBweDtcbiAgfVxuICAuZmxleGdyaWQtZGVidWcgLmNlbGw6OmFmdGVyIHtcbiAgICBsZWZ0OiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjkwcHgpIHtcbiAgLmZsZXhncmlkLWRlYnVnIC5ncmlkOjphZnRlciB7XG4gICAgbGVmdDogMTVweDtcbiAgICByaWdodDogMTVweDtcbiAgfVxuICAuZmxleGdyaWQtZGVidWcgLmNlbGw6OmFmdGVyIHtcbiAgICBsZWZ0OiAxNXB4O1xuICAgIHJpZ2h0OiAxNXB4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNTkwcHgpIHtcbiAgLmZsZXhncmlkLWRlYnVnIC5ncmlkOjphZnRlciB7XG4gICAgbGVmdDogMTVweDtcbiAgICByaWdodDogMTVweDtcbiAgfVxuICAuZmxleGdyaWQtZGVidWcgLmNlbGw6OmFmdGVyIHtcbiAgICBsZWZ0OiAxNXB4O1xuICAgIHJpZ2h0OiAxNXB4O1xuICB9XG59XG4iXX0= */
