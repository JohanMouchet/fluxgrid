/* Styling for the demo page */
/* Settings */
/* Tests */
/* stylelint-disable color-no-hex */
/* stylelint-disable enable */
html {
  font-size: 14px;
  font-family: Helvetica, sans-serif;
}

body {
  margin: 0;
  line-height: 1.5;
}

main {
  margin: 2em 1em;
}

a {
  color: #4f91b2;
}

h1 {
  display: inline-block;
  color: #e5e5e5;
  background: -webkit-gradient(linear, left top, right top, from(#4f91b2), to(#9b4dca));
  background: linear-gradient(to right, #4f91b2, #9b4dca);
  -webkit-background-clip: text;
          background-clip: text;
  -webkit-text-fill-color: transparent;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

/* Code */
code,
pre {
  border-radius: 0.3em;
  background-color: #f2f2f2;
}

/** Inline code **/
code {
  padding: 0.3em 0.5em;
  font-size: 0.85rem;
  font-weight: 300;
  text-transform: none;
}

/** Block of code **/
pre {
  line-height: 1.2;
  padding: 1.5em;
  -moz-tab-size: 2;
    -o-tab-size: 2;
       tab-size: 2;
  overflow-x: auto;
  /* stylelint-disable-next-line selector-max-type */
  /* stylelint-disable-next-line selector-max-type */
}

pre code {
  background-color: transparent;
  padding: 0;
}

pre u {
  text-decoration: none;
}

.syntax {
  background-color: #282c35;
}

.syntax--w {
  color: #d7dae0;
}

.syntax--r {
  color: #e06c75;
}

.syntax--g {
  color: #98c379;
}

.syntax--y {
  color: #d19a66;
}

/* Table */
table {
  width: 100%;
  border-collapse: collapse;
}

.table {
  margin: 2em 0;
  /* stylelint-disable-next-line selector-max-type */
}

.table tbody tr:not(:last-child) {
  border-bottom: 1px solid #e5e5e5;
}

.table th,
.table td {
  padding: 0.8em 1em;
  text-align: left;
}

.table th {
  font-weight: 700;
  color: #e5e5e5;
  background: -webkit-gradient(linear, left top, right top, from(#4f91b2), to(#9b4dca));
  background: linear-gradient(to right, #4f91b2, #9b4dca);
  -webkit-background-clip: text;
          background-clip: text;
  -webkit-text-fill-color: transparent;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.table thead {
  border-bottom: 2px solid #e5e5e5;
}

@media screen and (max-width: 768px) {
  .table--responsive {
    display: inline-block;
    max-width: 100%;
    overflow-x: auto;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
  }
}

/* hr */
hr {
  height: 0;
  width: 100%;
  margin: 2.5em 0;
  border: 0;
  border-bottom: 1px solid #e5e5e5;
}

.box {
  display: inline-block;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

/* Grid */
.toggle-grid-debug {
  display: inline-block;
  position: fixed;
  bottom: 1em;
  right: 1em;
  background-image: linear-gradient(45deg, #4f91b2, #9b4dca);
  color: #fff;
  white-space: nowrap;
  cursor: pointer;
  padding: 1em;
  border-radius: 0.5em;
  box-shadow: 0 5px 10px rgba(17, 17, 17, 0.2), 0 2px 5px rgba(17, 17, 17, 0.2);
  -webkit-transition: background-color 0.2s ease-out;
  transition: background-color 0.2s ease-out;
  -webkit-animation: slide-in 0.4s ease-out both;
          animation: slide-in 0.4s ease-out both;
  z-index: 1;
}

@-webkit-keyframes slide-in {
  from {
    opacity: 0;
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
  }
  to {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes slide-in {
  from {
    opacity: 0;
    -webkit-transform: translateY(100%);
            transform: translateY(100%);
  }
  to {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.toggle-grid-debug:hover, .toggle-grid-debug:focus {
  opacity: 0.8;
}

.toggle-grid-debug-checkbox {
  margin: 0 0.2em 0 0;
  vertical-align: middle;
}

.hide-grid-debug.hide-grid-debug::after {
  outline: none;
}

.hide-grid-debug.hide-grid-debug > .cell {
  /* stylelint-disable-next-line */
}

.hide-grid-debug.hide-grid-debug > .cell::after {
  outline: none;
}

/* Anchor */
.anchor {
  position: relative;
}

.anchor-link {
  position: absolute;
  right: 100%;
  padding-right: 0.25rem;
  font-weight: 300;
  font-style: normal;
  opacity: 0;
}

.anchor-link:focus {
  opacity: 1;
  text-decoration: none;
}

.anchor:hover .anchor-link {
  opacity: 1;
  text-decoration: none;
}

/* Counters */
.counter {
  counter-reset: index-1;
}

.counter .counter-index-1 {
  counter-increment: index-1;
  counter-reset: index-2;
}

.counter .counter-index-1::before {
  /* stylelint-disable-next-line */
  content: counter(index-1)"." " ";
}

.counter .counter-index-2 {
  counter-increment: index-2;
  counter-reset: index-3;
}

.counter .counter-index-2::before {
  /* stylelint-disable-next-line */
  content: counter(index-1)"."counter(index-2)"." " ";
}

.counter .counter-index-3 {
  counter-increment: index-3;
  counter-reset: index-4;
}

.counter .counter-index-3::before {
  /* stylelint-disable-next-line */
  content: counter(index-1)"."counter(index-2)"."counter(index-3)"." " ";
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
